package scanner

import "flame/token"

var keywordMap = map[string]token.Token{
	"void":     {Typ: token.T_VoidKw},
	"string":   {Typ: token.T_StringKw},
	"uint":     {Typ: token.T_UintKw},
	"u32":      {Typ: token.T_Uint32Kw},
	"int":      {Typ: token.T_IntKw},
	"i32":      {Typ: token.T_Int32Kw},
	"float":    {Typ: token.T_Float64Kw},
	"f32":      {Typ: token.T_Float32Kw},
	"bool":     {Typ: token.T_BoolKw},
	"const":    {Typ: token.T_Const},
	"return":   {Typ: token.T_Return},
	"match":    {Typ: token.T_Match},
	"with":     {Typ: token.T_With},
	"if":       {Typ: token.T_If},
	"else":     {Typ: token.T_Else},
	"elseif":   {Typ: token.T_ElseIf},
	"true":     {Typ: token.T_True},
	"false":    {Typ: token.T_False},
	"repeat":   {Typ: token.T_Repeat},
	"forever":  {Typ: token.T_Forever},
	"foreach":  {Typ: token.T_Foreach},
	"in":       {Typ: token.T_In},
	"while":    {Typ: token.T_While},
	"break":    {Typ: token.T_Break},
	"continue": {Typ: token.T_Continue},
	"struct":   {Typ: token.T_Struct},
	"embeds":   {Typ: token.T_Embeds},
	"pub":      {Typ: token.T_Pub},
	"pkg":      {Typ: token.T_Pkg},
	"import":   {Typ: token.T_Import},
	"println":  {Typ: token.T_PrintlnFn},
	"strLen":   {Typ: token.T_StrLenFn},
	"append":   {Typ: token.T_AppendFn},
	"pop":      {Typ: token.T_PopFn},
}
